
- name: Create dev group and machines users in group
  become: true
  become_user: root
  block:

  # FIX for deprecated code that added user files in /etc/sudoers.d/ - can be removed in future
  - name: delete /etc/sudoers.d/username files for machine users
    file:
      path: "/etc/sudoers.d/{{ item.name }}"
      state: absent
    with_items: "{{ remove_machine_users + machine_users }}"

  - name: Ensure group "devs" exists
    group:
      name: devs
      state: present

  - name: Add machine users
    user:
      name: "{{ item.name }}"
      uid: "{{ item.uid }}"
      shell: /bin/bash
      groups: devs
      append: true
    with_items: "{{ machine_users }}"

  # NOTE: this is required in case a user's UID changes - ansible may not update the GID
  - name: Ensure user's group exists with correct gid
    group:
      name: "{{ item.name }}"
      gid: "{{ item.uid }}"
      state: present
    with_items: "{{ machine_users }}"

  # note: this assumes all VMs run Ubuntu - if not, then need to define a var containing OS-specific group
  - name: Allow members of sudo group to sudo without a password
    lineinfile:
      dest: "/etc/sudoers"
      regexp: "^%sudo"
      line: "%sudo ALL=(ALL) NOPASSWD: ALL"
      state: "present"
      validate: /usr/sbin/visudo -cf %s

  # note: this assumes all VMs run Ubuntu - if not, then need to define a var containing OS-specific group
  - name: Add machine users with 'sudo' role to Ubuntu sudo group
    user:
      name: "{{ item.name }}"
      groups:
      - sudo
      append: yes
    with_items: "{{ machine_users | selectattr('roles', 'contains', 'sudo') | list }}"

  - name: Disable login for machine_users with 'nologin' role (leaves account otherwise intact)
    user: 
      name: "{{ item.name }}"
      shell: /sbin/nologin
    with_items: "{{ machine_users | selectattr('roles', 'contains', 'nologin') | list }}"

  - name: Remove old machine user accounts
    user:
      name: "{{ item.name }}"
      state: "absent"
      remove: yes 
      force: yes 
    with_items: "{{ remove_machine_users }}"

  - name: Add some env_vars to .bashrcs
    blockinfile:
      path: "/home/{{ item.name }}/.bashrc"
      block: |
        {{ bashrc_env }}
      marker: "# {mark} MANAGED BY ANSIBLE - DO NOT MODIFY"
    with_items: "{{ machine_users + [{'name': 'ubuntu'}] }}"
    when: bashrc_env is defined

  - name: Add SSH keys for users
    authorized_key:
      user: "{{ item.name }}"
      key: "{{ lookup('file', item.key) }}"
      state: present
    with_items: "{{ machine_users }}"
